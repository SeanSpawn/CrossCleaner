name: Rust compile and release

on:
  push:
    branches: [ "main", "test" ]
  pull_request:
    branches: [ "main", "test" ]

env:
  CARGO_TERM_COLOR: always
  APP_VERSION: "1.9.6"
  VT_API_KEY: ${{ secrets.VIRUSTOTAL_API_KEY }}

jobs:
  build_linux:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - uses: actions/checkout@v4
    - name: Update Cargo.toml version
      run: |
        sed -i 's/^version = .*/version = "${{ env.APP_VERSION }}"/' Cargo.toml
        sed -i 's/ProductVersion = .*/ProductVersion = "${{ env.APP_VERSION }}"/' Cargo.toml
    - name: Build linux
      run: cargo build --release
    - name: Move binaries
      run: |
        mv target/release/Cross_Cleaner_CLI Cross_Cleaner_CLI-${{ env.APP_VERSION }}-linux
        mv target/release/Cross_Cleaner_GUI Cross_Cleaner_GUI-${{ env.APP_VERSION }}-linux
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-binaries
        path: |
          Cross_Cleaner_CLI-${{ env.APP_VERSION }}-linux
          Cross_Cleaner_GUI-${{ env.APP_VERSION }}-linux

  build_windows:
    runs-on: windows-latest
    permissions: write-all

    steps:
    - uses: actions/checkout@v4
    - name: Update Cargo.toml version
      run: |
        sed -i 's/^version = .*/version = "${{ env.APP_VERSION }}"/' Cargo.toml
        sed -i 's/ProductVersion = .*/ProductVersion = "${{ env.APP_VERSION }}"/' Cargo.toml
    - name: Build windows
      run: cargo build --release
    - name: Move binaries
      run: |
        move target\release\Cross_Cleaner_CLI.exe Cross_Cleaner_CLI-${{ env.APP_VERSION }}-windows.exe
        move target\release\Cross_Cleaner_GUI.exe Cross_Cleaner_GUI-${{ env.APP_VERSION }}-windows.exe
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-binaries
        path: |
          Cross_Cleaner_CLI-${{ env.APP_VERSION }}-windows.exe
          Cross_Cleaner_GUI-${{ env.APP_VERSION }}-windows.exe

virus_total_check:
  needs: [build_linux, build_windows]
  runs-on: ubuntu-latest
  permissions:
    contents: read
  steps:
    - name: Set version
      run: echo "APP_VERSION=${{ env.APP_VERSION }}" >> $GITHUB_ENV

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: linux-binaries
        path: linux-binaries

    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-binaries
        path: windows-binaries

    - name: Scan Linux CLI
      id: scan_linux_cli
      uses: filipnavara/virustotal-action@v1
      with:
        path: linux-binaries/Cross_Cleaner_CLI-${{ env.APP_VERSION }}-linux
        api_key: ${{ env.VT_API_KEY }}
      continue-on-error: true

    - name: Wait 60 seconds
      if: always()
      run: sleep 60

    - name: Scan Linux GUI
      id: scan_linux_gui
      uses: filipnavara/virustotal-action@v1
      with:
        path: linux-binaries/Cross_Cleaner_GUI-${{ env.APP_VERSION }}-linux
        api_key: ${{ env.VT_API_KEY }}
      continue-on-error: true

    - name: Wait 60 seconds
      if: always()
      run: sleep 60

    - name: Scan Windows CLI
      id: scan_win_cli
      uses: filipnavara/virustotal-action@v1
      with:
        path: windows-binaries/Cross_Cleaner_CLI-${{ env.APP_VERSION }}-windows.exe
        api_key: ${{ env.VT_API_KEY }}
      continue-on-error: true

    - name: Wait 60 seconds
      if: always()
      run: sleep 60

    - name: Scan Windows GUI
      id: scan_win_gui
      uses: filipnavara/virustotal-action@v1
      with:
        path: windows-binaries/Cross_Cleaner_GUI-${{ env.APP_VERSION }}-windows.exe
        api_key: ${{ env.VT_API_KEY }}
      continue-on-error: true

    - name: Prepare report
      run: |
        echo "REPORT_URLS=''" >> $GITHUB_ENV
        [ -n "${{ steps.scan_linux_cli.outputs.report_url }}" ] && echo "REPORT_URLS+='- **Linux CLI**: [VirusTotal Report](${{ steps.scan_linux_cli.outputs.report_url }})\n'" >> $GITHUB_ENV
        [ -n "${{ steps.scan_linux_gui.outputs.report_url }}" ] && echo "REPORT_URLS+='- **Linux GUI**: [VirusTotal Report](${{ steps.scan_linux_gui.outputs.report_url }})\n'" >> $GITHUB_ENV
        [ -n "${{ steps.scan_win_cli.outputs.report_url }}" ] && echo "REPORT_URLS+='- **Windows CLI**: [VirusTotal Report](${{ steps.scan_win_cli.outputs.report_url }})\n'" >> $GITHUB_ENV
        [ -n "${{ steps.scan_win_gui.outputs.report_url }}" ] && echo "REPORT_URLS+='- **Windows GUI**: [VirusTotal Report](${{ steps.scan_win_gui.outputs.report_url }})\n'" >> $GITHUB_ENV

  create_release:
    needs: [virus_total_check]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: linux-binaries
        path: linux-binaries
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-binaries
        path: windows-binaries
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ env.APP_VERSION }}
        name: Cross Cleaner ${{ env.APP_VERSION }}
        body: |
          ### VirusTotal Scan Results:
          ${{ env.REPORT_URLS }}
          
          ### Download Links:
          - **Linux CLI**: Cross_Cleaner_CLI-${{ env.APP_VERSION }}-linux
          - **Linux GUI**: Cross_Cleaner_GUI-${{ env.APP_VERSION }}-linux
          - **Windows CLI**: Cross_Cleaner_CLI-${{ env.APP_VERSION }}-windows.exe
          - **Windows GUI**: Cross_Cleaner_GUI-${{ env.APP_VERSION }}-windows.exe
        files: |
          linux-binaries/Cross_Cleaner_CLI-${{ env.APP_VERSION }}-linux
          linux-binaries/Cross_Cleaner_GUI-${{ env.APP_VERSION }}-linux
          windows-binaries/Cross_Cleaner_CLI-${{ env.APP_VERSION }}-windows.exe
          windows-binaries/Cross_Cleaner_GUI-${{ env.APP_VERSION }}-windows.exe
